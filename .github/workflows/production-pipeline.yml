name: Build and deploy production

on:
  push:
    branches: ['main']
  workflow_dispatch:

jobs:
  build-and-deploy:
    environment: production
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Clear repository
        run: sudo rm -fr $GITHUB_WORKSPACE && mkdir $GITHUB_WORKSPACE

      - name: Checkout repos
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies if changed
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --legacy-peer-deps

      - name: Build application
        run: npm run build

      - name: SSH to our server and backup old build
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /var/www/html/vedam_website
            git pull
            rm -rf .next_backup
            cp -r .next .next_backup

      - name: Deploy build files with SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: '.next/'
          target: '/var/www/html/vedam_website/'

      - name: Restart the application
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            pm2 reload vedam-website